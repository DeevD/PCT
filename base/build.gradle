apply plugin: 'com.android.library'
apply plugin: 'hugo'//for method logging (only in debug builds)
apply plugin: 'com.github.ben-manes.versions'// to check for dependency updates

android {
    compileSdkVersion rootProject.ext.compileSdk

    def buildNumber = (System.getenv('BUILD_NUMBER') == null ? 0 : System.getenv('BUILD_NUMBER')) as int
    def gitBranch = (System.getenv('GIT_BRANCH') == null ? 'local' : System.getenv('GIT_BRANCH').replace('origin/', ''))
    def releaseType = (System.getenv('RELEASE_TYPE') == null ? 'NONE' : System.getenv('RELEASE_TYPE'))
    def updateUrls = (System.getenv('UPDATE_URLS') == null ? '"https://popcorntime.sh/android-update.json"' : System.getenv('UPDATE_URLS'))
    def animeUrls = (System.getenv('ANIME_URLS') == null ? '"https://anime.api-fetch.website/"' : System.getenv('ANIME_URLS'))
    def movieUrls = (System.getenv('MOVIE_URLS') == null ? '"https://movies-v2.api-fetch.website/"' : System.getenv('MOVIE_URLS'))
    def tvUrls = (System.getenv('TV_URLS') == null ? '"http://tv-v2.api-fetch.website/"' : System.getenv('TV_URLS'))

    defaultConfig {
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        buildConfigField 'Integer', 'BUILD_NUMBER', '' + buildNumber + ''
        buildConfigField 'String', 'GIT_BRANCH', '\"' + gitBranch + '\"'
        buildConfigField 'String', 'RELEASE_TYPE', '\"' + releaseType + '\"'
        buildConfigField 'String[]', 'UPDATE_URLS', '{' + updateUrls + '}'
        buildConfigField 'String[]', 'ANIME_URLS', '{' + animeUrls + '}'
        buildConfigField 'String[]', 'MOVIE_URLS', '{' + movieUrls + '}'
        buildConfigField 'String[]', 'TV_URLS', '{' + tvUrls + '}'
        versionCode buildNumber
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/beans.xml'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        abortOnError false
        lintConfig file('lint.xml')
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:multidex:1.0.1'

    compile "com.android.support:support-v4:${rootProject.ext.appCompatVersion}"
    compile "com.android.support:palette-v7:${rootProject.ext.appCompatVersion}"
    compile "com.android.support:appcompat-v7:${rootProject.ext.appCompatVersion}"
    compile "com.android.support:design:${rootProject.ext.appCompatVersion}"

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'

    compile 'com.jakewharton.timber:timber:4.1.2'
    compile "com.squareup.okhttp3:okhttp:${rootProject.ext.okHttpVersion}"
    compile "com.squareup.picasso:picasso:${rootProject.ext.picassoVersion}"
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
    compile "com.jakewharton:butterknife:${rootProject.ext.butterknifeVersion}"

    compile "com.github.TorrentStream:TorrentStreamServer-Android:${rootProject.ext.torrentstreamServerVersion}"

    compile 'com.github.gabrielemariotti.changeloglib:changelog:2.1.0'

    compile 'com.koushikdutta.async:androidasync:2.1.9'

    compile 'de.timroes:aXMLRPC:1.8.1'

    compile "com.google.dagger:dagger:${rootProject.ext.daggerVersion}"

    compile 'com.fasterxml.jackson.core:jackson-core:2.7.2'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.2'

    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.ext.daggerVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.butterknifeVersion}"

    provided "javax.annotation:javax.annotation-api:${rootProject.ext.javaxAnnotationVersion}"

    compile project(':vlc')
    compile project(':connectsdk')


}
